name: CI/CD Pipeline - Build, Scan & Push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_USERNAME: matiguida
  REGISTRY: docker.io

jobs:
  # ========================================
  # √âTAPE 1 : CONSTRUIRE ET SCANNER FRONTEND
  # ========================================
  build-scan-push-frontend:
    name: Frontend - Build, Scan & Push
    runs-on: ubuntu-latest

    steps:
      # R√©cup√©rer votre code
      - name:  R√©cup√©rer le code
        uses: actions/checkout@v4

      # Se connecter √† Docker Hub
      - name:  Connexion √† Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Construire l'image Frontend
      - name: Construire Frontend
        run: |
          echo "Construction de l'image frontend..."
          docker build -t ${{ env.DOCKER_USERNAME }}/image:frontend-latest \
                       -t ${{ env.DOCKER_USERNAME }}/image:frontend-${{ github.sha }} \
                       ./frontend
          echo " Frontend construit avec succ√®s"

      # Scanner l'image avec Trivy
      - name:  Scanner Frontend (Vuln√©rabilit√©s Critiques)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_USERNAME }}/image:frontend-latest
          format: 'table'
          output: 'trivy-frontend-report.txt'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'

      # Afficher le r√©sultat du scan
      - name:  Afficher r√©sultats Frontend
        if: always()
        run: |
          echo "=================================="
          echo "üîç R√âSULTATS SCAN FRONTEND"
          echo "=================================="
          cat trivy-frontend-report.txt || echo "Aucune vuln√©rabilit√© d√©tect√©e"
          echo "=================================="

      # Sauvegarder le rapport
      - name:  Sauvegarder rapport Frontend
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: rapport-scan-frontend
          path: trivy-frontend-report.txt
          retention-days: 90

      # Pousser sur Docker Hub
      - name:  Pousser Frontend sur Docker Hub
        run: |
          echo "Envoi vers Docker Hub..."
          docker push ${{ env.DOCKER_USERNAME }}/image:frontend-latest
          docker push ${{ env.DOCKER_USERNAME }}/image:frontend-${{ github.sha }}
          echo " Frontend publi√© sur Docker Hub"

  # ========================================
  # √âTAPE 2 : CONSTRUIRE ET SCANNER BACKEND
  # ========================================
  build-scan-push-backend:
    name: Backend - Build, Scan & Push
    runs-on: ubuntu-latest
    needs: build-scan-push-frontend

    steps:
      # R√©cup√©rer votre code
      - name:  R√©cup√©rer le code
        uses: actions/checkout@v4

      # Se connecter √† Docker Hub
      - name:  Connexion √† Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Construire l'image Backend
      - name: Construire Backend
        run: |
          echo "Construction de l'image backend..."
          docker build -t ${{ env.DOCKER_USERNAME }}/image:backend-latest \
                       -t ${{ env.DOCKER_USERNAME }}/image:backend-${{ github.sha }} \
                       ./backend
          echo " Backend construit avec succ√®s"

      # Scanner l'image avec Trivy
      - name: üîç Scanner Backend (Vuln√©rabilit√©s Critiques)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_USERNAME }}/image:backend-latest
          format: 'table'
          output: 'trivy-backend-report.txt'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'

      # Afficher le r√©sultat du scan
      - name: üìä Afficher r√©sultats Backend
        if: always()
        run: |
          echo "=================================="
          echo "üîç R√âSULTATS SCAN BACKEND"
          echo "=================================="
          cat trivy-backend-report.txt || echo "Aucune vuln√©rabilit√© d√©tect√©e"
          echo "=================================="

      # Sauvegarder le rapport
      - name:  Sauvegarder rapport Backend
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: rapport-scan-backend
          path: trivy-backend-report.txt
          retention-days: 90

      # Pousser sur Docker Hub
      - name:  Pousser Backend sur Docker Hub
        run: |
          echo "Envoi vers Docker Hub..."
          docker push ${{ env.DOCKER_USERNAME }}/image:backend-latest
          docker push ${{ env.DOCKER_USERNAME }}/image:backend-${{ github.sha }}
          echo " Backend publi√© sur Docker Hub"

  # ========================================
  # √âTAPE 3 : R√âSUM√â FINAL
  # ========================================
  summary:
    name: R√©sum√© du Pipeline
    runs-on: ubuntu-latest
    needs: [build-scan-push-frontend, build-scan-push-backend]
    if: always()

    steps:
      - name:  R√©sum√© complet
        run: |
          echo "========================================="
          echo " PIPELINE CI/CD TERMIN√â"
          echo "========================================="
          echo ""
          echo "üì¶ Images publi√©es :"
          echo "   - matiguida/image:frontend-latest"
          echo "   - matiguida/image:backend-latest"
          echo ""
          echo "üîç Rapports de s√©curit√© :"
          echo "   - T√©l√©chargez les rapports dans l'onglet Artifacts"
          echo ""
          echo "========================================="
