name: CI/CD Pipeline - Build, Scan & Push

# D√©clenche le workflow sur les push et pull request sur la branche main
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io

jobs:
  # ========================================
  # √âTAPE 1 : CONSTRUIRE ET SCANNER FRONTEND
  # ========================================
  build-scan-push-frontend:
    name: Frontend - Build, Scan & Push
    runs-on: ubuntu-latest
    steps:
      # R√©cup√©rer le code depuis GitHub
      - name:  Checkout
        uses: actions/checkout@v4

      # Connexion √† Docker Hub en utilisant les secrets GitHub
      - name:  Login Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Construire l'image Docker pour le frontend
      - name:  Build Frontend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend-image:latest \
                       -t ${{ secrets.DOCKER_USERNAME }}/frontend-image:${{ github.sha }} \
                       ./frontend

      # Scanner l'image avec Trivy pour d√©tecter les vuln√©rabilit√©s critiques et hautes
      - name: üîç Scan Frontend
        uses: aquasecurity/trivy-action@v0.10.2
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/frontend-image:latest
          format: 'table'
          output: 'trivy-frontend-report.txt'
          severity: 'CRITICAL,HIGH'
          exit-code: '0' # 0 pour ne pas faire √©chouer le workflow m√™me si vuln√©rabilit√©s d√©tect√©es

      # Sauvegarder le rapport pour consultation future
      - name:  Upload Frontend Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: rapport-scan-frontend
          path: trivy-frontend-report.txt
          retention-days: 90

      # Pousser l'image sur Docker Hub
      - name:  Push Frontend
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend-image:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend-image:${{ github.sha }}

  # ========================================
  # √âTAPE 2 : CONSTRUIRE ET SCANNER BACKEND
  # ========================================
  build-scan-push-backend:
    name: Backend - Build, Scan & Push
    runs-on: ubuntu-latest
    needs: build-scan-push-frontend
    steps:
      - name:  Checkout
        uses: actions/checkout@v4

      - name:  Login Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name:  Build Backend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend-image:latest \
                       -t ${{ secrets.DOCKER_USERNAME }}/backend-image:${{ github.sha }} \
                       ./backend

      - name:  Scan Backend
        uses: aquasecurity/trivy-action@v0.10.2
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/backend-image:latest
          format: 'table'
          output: 'trivy-backend-report.txt'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'

      - name:  Upload Backend Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: rapport-scan-backend
          path: trivy-backend-report.txt
          retention-days: 90

      - name:  Push Backend
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/backend-image:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/backend-image:${{ github.sha }}

  # ========================================
  # √âTAPE 3 : R√âSUM√â FINAL
  # ========================================
  summary:
    name: R√©sum√© du Pipeline
    runs-on: ubuntu-latest
    needs: [build-scan-push-frontend, build-scan-push-backend]
    if: always()
    steps:
      - name:  R√©sum√©
        run: |
          echo "========================================="
          echo " PIPELINE CI/CD TERMIN√â"
          echo "Images publi√©es :"
          echo "   ${{ secrets.DOCKER_USERNAME }}/frontend-image:latest"
          echo "   ${{ secrets.DOCKER_USERNAME }}/backend-image:latest"
          echo "Rapports de s√©curit√© disponibles dans Artifacts"
          echo "========================================="

